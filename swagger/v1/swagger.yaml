---
openapi: 3.0.1
info:
  title: API V1
  version: v1
paths:
  "/api/v1/configs":
    post:
      summary: Creates configs
      tags:
      - Configs
      parameters: []
      responses:
        '201':
          description: configs created
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                config_name:
                  type: string
                config_value:
                  type: string
                description:
                  type: string
                uuid:
                  type: binary
                created_at:
                  type: datetime
                updated_at:
                  type: datetime
              required:
              - config
              - config_value
              - description
              - uuid
              - created_at
              - updated_at
  "/v1/add_person":
    post:
      summary: Creates person details
      tags:
      - People
      security:
      - Bearer: {}
      parameters:
      - name: access_token
        in: header
        schema:
          type: string
      responses:
        '201':
          description: person details created
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                given_name:
                  type: string
                family_name:
                  type: string
                middle_name:
                  type: string
                birthdate:
                  type: date
                birthdate_estimated:
                  type: boolean
                gender:
                  type: string
                ancestry_district:
                  type: string
                ancestry_ta:
                  type: string
                ancestry_village:
                  type: string
                home_district:
                  type: string
                home_ta:
                  type: string
                home_village:
                  type: string
                npid:
                  type: string
                person_uuid:
                  type: binary
                date_registered:
                  type: datetime
                last_edited:
                  type: datetime
                location_created_at:
                  type: integer
                location_updated_at:
                  type: integer
              required:
              - first_name
              - last_name
              - gender
              - npid
              - person_uuid
              - date_registered
              - last_edited
              - location_created_at
              - location_updated_at
  "/v1/search_by_name_and_gender":
    post:
      summary: Search by name and gender
      tags:
      - People
      security:
      - Bearer: {}
      parameters:
      - name: access_token
        in: header
        schema:
          type: string
      responses:
        '200':
          description: success
        '401':
          description: invalid request
        '500':
          description: No token for authorization
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                given_name:
                  type: string
                family_name:
                  type: string
                gender:
                  type: string
              required:
              - given_name
              - family_name
              - gender
  "/v1/search_by_npid":
    post:
      summary: Search by name npid
      tags:
      - People
      security:
      - Bearer: {}
      parameters:
      - name: access_token
        in: header
        schema:
          type: string
      responses:
        '200':
          description: success
        '401':
          description: invalid request
        '500':
          description: No token for authorization
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                npid:
                  type: string
                doc_id:
                  type: string
              required:
              - npid
              - doc_id
  "/v1/person_changes":
    get:
      summary: Pull Updates
      tags:
      - Sync
      parameters: []
      responses:
        '200':
          description: Records pulled successfully
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                site_id:
                  type: string
                pull_seq:
                  type: integer
              required:
              - site_id
              - pull_seq
  "/v1/push_changes":
    post:
      summary: Push Updates
      tags:
      - Sync
      parameters: []
      responses:
        '200':
          description: Records pushed successfully
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                first_name:
                  type: string
                middle_name:
                  type: string
                gender:
                  type: string
                current_village:
                  type: string
                current_traditional_authority:
                  type: string
                current_district:
                  type: string
                home_village:
                  type: string
                home_traditional_authority:
                  type: string
                home_district:
                  type: string
                birthdate:
                  type: date
                birthdate_estimated:
                  type: boolean
                person_uuid:
                  type: binary
                npid:
                  type: string
                date_registered:
                  type: datetime
                last_edited:
                  type: datetime
                location_created_at:
                  type: integer
                location_updated_at:
                  type: integer
                creator:
                  type: integer
                home_ta:
                  type: string
                ancestry_village:
                  type: string
                ancestry_ta:
                  type: string
                ancestry_district:
                  type: string
              required:
              - first_name
              - gender
              - npid
              - person_uuid
              - date_registered
              - last_edited
              - location_created_at
              - location_updated_at
  "/v1/pull_npids":
    get:
      summary: Pull npids
      tags:
      - Sync
      parameters: []
      responses:
        '200':
          description: npids pulled successfully
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                npids_seq:
                  type: integer
              required:
              - npids
  v1/register:
    post:
      summary: Registers User
      tags:
      - User
      parameters: []
      responses:
        '201':
          description: User created successfully
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
                location:
                  type: integer
                email:
                  type: string
              required:
              - username
              - password
              - location
              - email
  v1/login:
    post:
      summary: User Login
      tags:
      - User
      parameters: []
      responses:
        '200':
          description: success
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
              required:
              - username
              - password
              - location
              - email
  v1/verify_token/:
    post:
      summary: verify token
      tags:
      - User
      parameters: []
      responses:
        '200':
          description: success
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
              required:
              - token
servers:
- url: http://{defaultHost}
  variables:
    defaultHost:
      default: localhost:3000
